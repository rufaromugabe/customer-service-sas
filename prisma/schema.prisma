generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public", "users"]
}

model admins {
  id            String    @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  email         String    @unique
  password_hash String
  name          String?
  created       DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated       DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted       DateTime? @db.Timestamp(6)

  @@schema("public")
}

model tenants {
  id              String       @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  name            String?
  created         DateTime     @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated         DateTime     @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted         DateTime?    @db.Timestamp(6)
  compute_id      String?      @db.Uuid
  active          Boolean      @default(true)
  current_plan_id String?      @db.Uuid
  roles           roles[]
  workspaces      workspaces[]

  @@schema("public")
}

model plans {
  id            String          @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  name          String          @unique
  description   String?
  price         Float
  created       DateTime        @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated       DateTime        @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted       DateTime?       @db.Timestamp(6)
  plan_features plan_features[]

  @@schema("public")
}

model features {
  id            String          @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  name          String          @unique
  description   String?
  created       DateTime        @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated       DateTime        @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted       DateTime?       @db.Timestamp(6)
  plan_features plan_features[]

  @@schema("public")
}

model plan_features {
  plan_id    String   @db.Uuid
  feature_id String   @db.Uuid
  created    DateTime @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  feature    features @relation(fields: [feature_id], references: [id], onDelete: Cascade)
  plan       plans    @relation(fields: [plan_id], references: [id], onDelete: Cascade)

  @@id([plan_id, feature_id])
  @@schema("public")
}

model permissions {
  id          String    @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  name        String    @unique
  description String?
  type        String
  created     DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated     DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted     DateTime? @db.Timestamp(6)

  @@schema("public")
}

model todos {
  id        String                 @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  tenant_id String                 @db.Uuid
  title     String?                @db.VarChar(256)
  estimate  String?                @db.VarChar(256)
  embedding Unsupported("vector")?
  complete  Boolean?

  @@id([tenant_id, id], map: "todos_tenant_id_id")
  @@schema("public")
}

model workspaces {
  id          String    @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id   String    @db.Uuid
  name        String
  description String?
  created     DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated     DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted     DateTime? @db.Timestamp(6)
  tenant      tenants   @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@id([tenant_id, id])
  @@schema("public")
}

model roles {
  id               String             @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id        String             @db.Uuid
  name             String
  description      String?
  created          DateTime           @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated          DateTime           @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted          DateTime?          @db.Timestamp(6)
  role_permissions role_permissions[]
  tenant           tenants            @relation(fields: [tenant_id], references: [id], onDelete: Cascade)

  @@id([tenant_id, id])
  @@schema("public")
}

model role_permissions {
  role_id       String   @db.Uuid
  tenant_id     String   @db.Uuid
  permission_id String   @db.Uuid
  created       DateTime @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  role          roles    @relation(fields: [tenant_id, role_id], references: [tenant_id, id], onDelete: Cascade)

  @@id([tenant_id, role_id, permission_id])
  @@schema("public")
}

model invitations {
  id                 String    @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id          String    @db.Uuid
  email              String
  token              String
  status             String    @default("pending")
  expires_at         DateTime? @db.Timestamp(6)
  invited_by_user_id String?
  created            DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated            DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)

  @@id([tenant_id, id])
  @@unique([tenant_id, token])
  @@schema("public")
}

model ai_agents {
  id           String    @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id    String    @db.Uuid
  workspace_id String    @db.Uuid
  name         String
  description  String?
  model_config Json?
  status       String    @default("active")
  created      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted      DateTime? @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model knowledge_bases {
  id           String    @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id    String    @db.Uuid
  workspace_id String    @db.Uuid
  name         String
  description  String?
  created      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted      DateTime? @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model documents {
  id                String                 @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  knowledge_base_id String                 @db.Uuid
  tenant_id         String                 @db.Uuid
  workspace_id      String                 @db.Uuid
  title             String
  content           String
  embedding         Unsupported("vector")?
  created           DateTime               @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated           DateTime               @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted           DateTime?              @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model conversations {
  id           String    @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id    String    @db.Uuid
  workspace_id String    @db.Uuid
  customer_id  String?
  start_time   DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  end_time     DateTime? @db.Timestamp(6)
  status       String    @default("OPEN")
  agent_id     String?   @db.Uuid
  sentiment    String?
  summary      String?
  created      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted      DateTime? @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model messages {
  id              String                 @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  conversation_id String                 @db.Uuid
  tenant_id       String                 @db.Uuid
  workspace_id    String                 @db.Uuid
  sender_type     String
  content         String
  timestamp       DateTime               @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  embedding       Unsupported("vector")?
  created         DateTime               @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated         DateTime               @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model ai_settings {
  id               String   @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id        String   @db.Uuid
  workspace_id     String   @db.Uuid
  default_ai_model String?
  embedding_model  String?
  temperature      Float?
  max_tokens       Int?
  created          DateTime @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated          DateTime @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)

  @@id([tenant_id, id])
  @@schema("public")
}

model audit_logs {
  id          String   @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  tenant_id   String   @db.Uuid
  user_id     String?  @db.Uuid
  action      String
  entity_type String
  entity_id   String?  @db.Uuid
  timestamp   DateTime @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  details     Json?
  log_type    String

  @@id([tenant_id, id])
  @@schema("users")
}

model tenant_users {
  tenant_id String    @db.Uuid
  user_id   String    @db.Uuid
  created   DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated   DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted   DateTime? @db.Timestamp(6)
  roles     String[]
  email     String?

  @@id([tenant_id, user_id])
  @@index([tenant_id], map: "tenant_users_tenant_id")
  @@index([user_id], map: "tenant_users_user_id")
  @@schema("users")
}

model users {
  id             String    @id @default(dbgenerated("public.uuid_generate_v7()")) @db.Uuid
  created        DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated        DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted        DateTime? @db.Timestamp(6)
  name           String?
  family_name    String?
  given_name     String?
  email          String?
  picture        String?
  email_verified DateTime? @db.Timestamp(6)

  @@schema("users")
}

/// This table has subclasses and requires additional setup for migrations. Visit https://pris.ly/d/table-inheritance for more info.
model workspace_users {
  workspace_id String    @db.Uuid
  user_id      String    @db.Uuid
  tenant_id    String    @db.Uuid
  role_id      String    @db.Uuid
  created      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  updated      DateTime  @default(dbgenerated("LOCALTIMESTAMP")) @db.Timestamp(6)
  deleted      DateTime? @db.Timestamp(6)

  @@id([tenant_id, workspace_id, user_id])
  @@index([tenant_id], map: "workspace_users_tenant_id")
  @@index([user_id], map: "workspace_users_user_id")
  @@index([workspace_id], map: "workspace_users_workspace_id")
  @@schema("users")
}
